{% extends 'generic/Popup.twig' %}
{% block popup_id %}upload-course-materials-form{% endblock %}
{% block title %}Upload Base paper{% endblock %}
{% block body %}
    <div id="material-upload-form" class="flex-col flex-col-space">
        <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
        <fieldset>
            <legend class="black-message">
                Type of exam?
            </legend>
            <label class = "radio" for="file_selection_radio">
                <input id="file_selection_radio" name="course_material_type" type="radio" onchange="$('#file_selection').show();$('#url_selection').hide();" checked>
                Quiz
            </label>
            <label class = "radio" for="file_selection_radio">
                <input id="file_selection_radio" name="course_material_type" type="radio" onchange="$('#file_selection').show();$('#url_selection').hide();" checked>
                Mid-semester exam
            </label>
            <label class = "radio" for="file_selection_radio">
                <input id="file_selection_radio" name="course_material_type" type="radio" onchange="$('#file_selection').show();$('#url_selection').hide();" checked>
                Comprehensive exam
            </label>
        </fieldset>
        <fieldset>
                <label>
                    Number of Variants?
                    <input id="title" type="text" class="full-width"/>
                </label>
            </span>
        </fieldset>
        <div id="file_selection">
          <label>
              <input id="expand-zip-checkbox" type="checkbox" value="off"/>
              Unzip zip files (Note: If checked, will replace all folders/files)
          </label>
          <div id="upload-boxes">
              {# upload1 and input-file1 required for drag-and-drop.js #}
              <div id="upload1" class="file-input">
                <label class="label key_to_click" for="input-file1" tabindex="0">Drag your Base Question Set here or click to open file browser</label>
                <input type="file" name="files" id="input-file1" onchange="addFilesFromInput(1,false)" multiple />
                <table class="file-upload-table" id="file-upload-table-1">
                  <tr style="background:transparent; display:none;">
                    <th>File Name:</th>
                    <th>Size:</th>
                  </tr>
                </table>
            </div>
          </div>
          <p>Total files cannot exceed 10 mb or 10240 kb.</p>
        </div>
        <div id="url_selection" style="display: none;">
          <span>
            <label>
              Title for URL:
              <input id="title" type="text" class="full-width"/>
            </label>
            <label>
              URL:
              <input id="url_url" type="url" class="full-width"/>
            </label>
          </span>
        </div>
    </div>
    <script>
        function makeSubmission(expandZip, hideFromStudents, cmPath, requestedPath, cmTime, sort, sections, sections_lock, overwrite_all) {
            handleUploadCourseMaterials("{{ csrf_token }}", expandZip, hideFromStudents, cmPath, requestedPath, cmTime, sort, sections, sections_lock, overwrite_all);
        }
        $(function() {
            $("#submit-materials").click(function(e){ // Submit button

                var sections = [];
                var cmTime = document.getElementById("upload_picker").value;
                var sort = document.getElementById("upload_sort").value;
                var cb = $("input#expand_zip_checkbox");
                var expandZip = 'off';
                if  ($('#expand-zip-checkbox').is(':checked'))  {
                    expandZip = 'on';
                }
                var hideFromStudents = 'off';
                if  ($('#hide-materials-checkbox').is(':checked'))  {
                    hideFromStudents = 'on';
                }
                var reg_sectionArray = JSON.parse('{{ reg_sections|json_encode|raw }}');

                reg_sectionArray.forEach(function(element){
                    var currentSection = '#section-upload-' +element['sections_registration_id']
                    if  ($(currentSection).is(':checked'))  {
                        sections.push(element['sections_registration_id']);
                    }
                });

                if(document.getElementById('show_Some_Section_Selection').style.display == "none"){
                    sections = null;
                }
                if(sections === null || sections.length > 0){
                    const cmPath = document.getElementById('cm_path').innerHTML;
                    const requestedPath = document.getElementById("provide-full-path").value;
                    const sections_lock = document.getElementById('all_Sections_Showing_yes').checked === true;
                    const overwrite_input = document.body.querySelector('input[name=overwrite-all]');
                    overwrite_all = overwrite_input ? (document.body.querySelector('input[name=overwrite-all]').value === 'true') : null;
                    makeSubmission(expandZip, hideFromStudents, cmPath, requestedPath, cmTime, sort, sections, sections_lock, overwrite_all);
                }
                else {
                    alert("Select at least one section");
                }
                e.stopPropagation();
            });
        });
        const upload_fp = flatpickr('#upload_picker', {
                    plugins: [ShortcutButtonsPlugin(
                        {
                            button: [
                                {
                                    label: "Beginning of time"
                                },
                                {
                                    label: "Now"
                                },
                                {
                                    label: "Tomorrow"
                                },
                                {
                                    label: "End of time"
                                }
                            ],
                            onClick: (index, upload_fp) => {
                                let date;
                                switch (index) {
                                    case 0:
                                        date = new Date('{{ begining_of_time_date }}');
                                        break;
                                    case 1:
                                        date = new Date();
                                        break;
                                    case 2:
                                        date = new Date();
                                        date.setDate(date.getDate() + 1);
                                        break;
                                    case 3:
                                        date = new Date("9998-01-01T00:00:00");
                                        break;
                                }
                                upload_fp.setDate(date);
                            }
                        }
                    )],
                    appendTo: document.getElementById('upload-course-materials-form'),
                    allowInput: true,
                    enableTime: true,
                    enableSeconds: true,
                    time_24hr: true,
                    dateFormat: "Y-m-d H:i:S",
                    onReady: (a, b, upload_fp) => {
                      upload_fp.calendarContainer.firstChild.childNodes[1].firstChild.firstChild.setAttribute('aria-label', 'Month');
                      upload_fp.calendarContainer.childNodes[2].childNodes[4].firstChild.setAttribute('aria-label', 'Seconds');
                    }
                    });
    $('.form-body').on('scroll', function() {
        upload_fp._positionCalendar();
    });
    </script>
    <script>
        createArray(1);
        var dropzone = document.getElementById("upload1");
        dropzone.addEventListener("dragenter", draghandle, false);
        dropzone.addEventListener("dragover", draghandle, false);
        dropzone.addEventListener("dragleave", draghandle, false);
        dropzone.addEventListener("drop", dropWithMultipleZips, false);
    </script>
    <script>
        registerSelect2Widget("provide-full-path", "upload-course-materials-form");
    </script>
{% endblock %}
{% block buttons %}
    {{ block('close_button') }}
    <input class="btn btn-primary" id="submit-materials" type="submit" value="Submit" />
{% endblock %}
